/*
 * =====================================================================================
 *
 *       Filename:  subject.cpp
 *
 *    Description:  主体类，用于被观测的对象 
 *
 *        Version:  1.0
 *        Created:  2019年06月12日 
 *       Revision:  1 
 *       Compiler:  gcc
 *
 *         Author:  kevin.wang 
 *   Organization:  
 *
 * =====================================================================================
 */

#include 	"subject.h"
#include 	"observer.h"


/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  Subject
 *  Description:  默认构造函数 
 * =====================================================================================
 */
Subject::Subject () {
	mlist.clear();
}

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  ~Subject
 *  Description:  默认析构函数 
 * =====================================================================================
 */
Subject::~Subject () {
}

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  Subject  
 *  Description:  拷贝构造函数 
 * =====================================================================================
 */
Subject::Subject(const Subject& theclass) {
}

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  Attach 
 *  Description:  附加观察者 
 * =====================================================================================
 */
void Subject::Attach(Observer &ob) {
	mlist.push_back(ob);
}

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  Notify 
 *  Description:  通知更新状态 
 * =====================================================================================
 */
void Subject::Notify() {
	std::list<Observer>::iterator plist;
	for ( plist = mlist.begin();plist!=mlist.end();plist++ ) {
		(*plist).Update(this);
	}
}
